name: Renovate + Flux (Scheduler & Alerts)

on:
  schedule:
    - cron: "0 3 * * 1"  # Every Monday at 3AM UTC
  workflow_dispatch:     # Manual trigger
  pull_request:
    types: [opened, reopened, closed]
    branches:
      - master

jobs:
  renovate-flux:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  # Only run Renovate on schedule/manual
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Renovate CLI
        run: npm install -g renovate

      - name: Install Flux CLI
        run: |
          curl -s https://fluxcd.io/install.sh | sudo bash
          flux --version

      - name: Run Renovate
        env:
          RENOVATE_TOKEN: ${{ secrets.RENOVATE_GITHUB_TOKEN }}
          LOG_LEVEL: info
        run: renovate ${{ github.repository }}

      - name: Reconcile Flux
        if: success()   # Only reconcile if Renovate ran successfully
        run: |
          flux reconcile source git flux-system --with-source

  renovate-alerts:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run alerts on PR events
    steps:
      - name: Send Slack Notification
        if: always()
        run: |
          ACTION=${{ github.event.action }}
          TITLE="${{ github.event.pull_request.title }}"
          URL="${{ github.event.pull_request.html_url }}"
          
          # Determine status text
          if [[ "$ACTION" == "opened" ]]; then
            STATUS="üÜï New Renovate PR opened"
          elif [[ "$ACTION" == "reopened" ]]; then
            STATUS="üîÑ Renovate PR reopened"
          elif [[ "$ACTION" == "closed" ]]; then
            if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
              STATUS="‚úÖ Renovate PR merged"
            else
              STATUS="‚ùå Renovate PR closed without merge"
            fi
          fi

          # Send message to Slack
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$STATUS: *$TITLE* <$URL>\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
